> node -v
version of node

>npm node package manager

> package.json

javascript object notation(json)
[
    {
        name:"john",
        class:"ang"
    },
    {
        name:"john1",
        class:"Ui"
    }
]


open terminal
>navigate to folder using cd

Step 1
>npm init

step2
> answer all pop question

step3
>  yes at the end

How to install package
>  npm install <package name> / npm i <package name>

>npm install



local dependency
global dependency

> global install
npm install -g @angular/cli

window>
run as admin

mac/linux
sudo npm install -g @angular/cli


Step to setup angular 

>  npm install -g @angular/cli
>  ng new firstapp
>  cd firstapp
> npm start
> http://localhost:4200

@aakashdeveloper/create-node-app


start Command
ng serve/ npm start

on specific port
ng serve --port 8700


/*
Module
>>> one main module
>>> can have serveral subModule
#### We do declaration of component,pipe,othermodule,service,routing


Component
>>> one main Component
>>> can have lot of other component
#### Can have html/css/logic and some more logic

Pipe
>>> multiple pipe
## Run time data change


Service
>> multiple service
###help to connect with third party or data store

Routing
>> Only one main routing
## help to managr routes or navbar
*/


#File Walkthrough

tslint => help to follow standard of coding (no change req)(imp)
tsconfig => tranform code from .ts => .js (no change req)(imp)
ReadMe => Guide or file to run application (req min change)(not imp)
package.json=> all dependency as well as scripts(imp)
package-lock.json => infromation of dependent package(imp)
angular.json=> metadata contains all the path and respective file(min req)(imp)
.gitignore=> which all thing we dont want to push on git(not imp)
.editorconfig => contains code standard fro text editor(no change req)(not imp)

>src 
app=> contains app (max change req)(imp)
assets => all static things(images,css,js)(max change req)
environments => tell app is in which environments(min change req)(imp)
browserList => static file (no change req)(not imp)
favicon => just image(no change req)(imp)
index.html => first file that browser will pick (imp)(min change req)
main.ts => let which module to load(min change req)(imp)


flow of app

angular.json => main.ts => app.module.ts => app.component.ts

step to create component
> create new .ts
> provide selector, template & class name
> declare every component in module file
> use selector in app.component.ts

//Data Bindings
>>>>>>One Way DataBinding<<<<<<<<<
# Data Bindings        {{}}
# Property Bindings    []
# Event Binding        ()
>>>>>>Two Way DataBinding<<<<<<<<<
# Two way Binding      [()]

//Data Types
string
number
boolean
any[]

//pipe
Inbuilt
> uppercase/lowercase/currency/date/titlecase/percentage
Custome
> Depend upon the requirnment


API>
movies = https://ngmusicdb.herokuapp.com/api/getMusic
product = https://ngapi4.herokuapp.com/api/getProducts

https://www.w3schools.com/jsref/jsref_filter.aspâ€©
https://www.w3schools.com/jsref/jsref_indexof.asp


var a = 10
var a
a = 10

var = redeclare & reassign
let = reassign but cannot redeclare
const = nor reassign nor redeclare


function add(a,b){
    return a+b
}

const add = (a,b) => { return a+b }

///Git////
>> 1st time
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/learn_git.git
git push -u origin master

>>2nd and all
git add .
git commit -m "first commit"
git push master

git branch -a  =>> to check all branch
git checkout -b newFeature  =>>> new branch


parent to child => Input and it will act as Property
child to parent => Output and it will act as event